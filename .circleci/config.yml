# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
# dependencies:
#   override:
#     - sudo pip install awscli
#   deployment:
#     prod:
#       branch: master
#       commands:
#         - aws s3 sync /home/ubuntu/project-name-here s3://bucket-name-here --delete
#
# For debugging and notification
# CIRCLE_BUILD_NUM
# CIRCLE_JOB
# CIRCLE_WORKING_DIRECTORY
# CIRCLE_BRANCH 
# CIRCLE_SHA1 
#
# Must be set in CirclCI Variables
# AWS_ACCESS_KEY_ID
# AWS_ACCOUNT_ID
# AWS_REGION
# AWS_SECRET_ACCESS_KEY
#
version: 2
jobs:
  build:
    working_directory: /tmp/xybersolve-io
    docker:
      - image: circleci/node:6.10-browsers
      #- image: circleci/node:7.10
    steps:
      - checkout
      
      - run:
          name: Show Job Related Variables
          command: |
            echo Branch ${CIRCLE_BRANCH}
            echo Sha ${CIRCLE_SHA1 }
            echo Job ${CIRCLE_JOB}
            echo Dir ${CIRCLE_WORKING_DIRECTORY}

      - restore-cache:
          keys:
           - v1-dependencies-{{ checksum "package.json" }}
           - v1-dependencies-        
      
      - run: 
          name: Install local dependencies - NPM modules
          command: npm install      


      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run: 
          name: Build app for production
            command: |
              if [ "${CIRCLE_BRANCH}" == "staging" ]; then
                npm run build:qa
              elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                npm run build:prod
              else
                npm run build:dev
              fi
            # command: npm run build:prod          
            # build:qa - future build feature
      
      # angular.json -> outputPath (dist)       
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            paths:
              - dist

  #- image: circleci/python:3.6.2-stretch-browsers            
  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    
    working_directory: /tmp/xybersolve-io
    
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli

      - run:
        name: Configure AWS
        command: |
          aws configure set default.s3.signature_version s3v4
          aws configure set region $AWS_REGION
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

      - run:
          name: Deploy to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
               aws s3 sync /tmp/xybersolve-io s3://xybersolve.io.2/ --delete
            fi
            # require 
            # command: aws s3 sync /tmp/xybersolve-io s3://xybersolve.io.2/ --delete

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:7.10
      
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#           - v1-dependencies-{{ checksum "package.json" }}
#           # fallback to using the latest cache if no exact match is found
#           - v1-dependencies-

#       - run: yarn install

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}
        
#       # run tests!
#       - run: yarn test


#version: 2
# # List of jobs
# jobs:
#     # The build job
#     build:
#         working_directory: ~/project
#         docker:
#             - image: circleci/node:6.10-browsers
#         steps:
#            # Steps to be added

#     # The deploy job
#     deploy:
#         working_directory: ~/project
#         docker:
#             - image: circleci/node:6.10-browsers
#         steps:
#             # Steps to be added
            
# workflows:
#     version: 2
#     # The build and deploy workflow
#     build_and_deploy:
#         jobs:
#             - build
#             - deploy