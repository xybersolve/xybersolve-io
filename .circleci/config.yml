# References
#
# For debugging and notification
# CIRCLE_BUILD_NUM
# CIRCLE_JOB
# CIRCLE_WORKING_DIRECTORY
# CIRCLE_BRANCH 
# CIRCLE_SHA1 
#
# Must be set in CirclCI Context
# AWS_ACCESS_KEY_ID
# AWS_ACCOUNT_ID
# AWS_REGION
# AWS_SECRET_ACCESS_KEY
#
version: 2
jobs:
  build:
    working_directory: ~/xybersolve-build
    
    docker:
      - image: circleci/node:10.12-jessie
    
    steps:
      - checkout
     
      # debug.x
      # - run:
      #     name: Show Job Related Variables
      #     command: |
      #       echo Branch ${CIRCLE_BRANCH}
      #       echo Sha ${CIRCLE_SHA1}
      #       echo Job ${CIRCLE_JOB}
      #       echo Dir ${CIRCLE_WORKING_DIRECTORY}
      #       echo Bash Ver $(bash --version)

      - restore-cache:
          keys:
           - v1-dependencies-{{ checksum "package.json" }}
           - v1-dependencies-
      
      - run: 
          name: Install local dependencies - NPM modules
          command: npm install

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run: 
          name: Build app for production
          command: |  
            case "${CIRCLE_BRANCH}" in
              develop)
                npm run build:dev
                ;;
              staging)
                npm run build:stage
                ;;
              master|release)
                npm run build:prod
                ;;
            esac      

          # command: npm run build:prod
          # more granular builds
          # command: |  
            # if [ "${CIRCLE_BRANCH}" == "staging" ]; then
            #   npm run build:qa
            # elif [ "${CIRCLE_BRANCH}" == "master" ]; then
            #   npm run build:prod
            # else
            #   npm run build:dev
            # fi
      
      # debug.x      
      # - run: 
      #     name: Post-build listing of workspace
      #     command: |
      #       echo PWD $(pwd)
      #       ls -lah ./dist
      
      # requires: angular.json -> outputPath: dist
      #       or: ng build --prod --output-path=dist
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist


  #- image: circleci/python:3.6.2-stretch-browsers            
  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    
    working_directory: ~/xybersolve-build
    
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli
      
      # debug.x    
      # - run:
      #     name: Reflect AWS Region
      #     command: echo AWS Region ${AWS_REGION}  

      - run:
          name: Configure AWS
          command: |
            aws configure set default.s3.signature_version s3v4
            aws configure set region ${AWS_REGION}
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}

      - restore-cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      
      # debug.x    
      # - run:
      #     name: Pre-deploy listing of workspace
      #     command: |
      #       echo PWD $(pwd)
      #       ls -lah ./dist

      - deploy:
          name: Deploy to S3
          command: |
            case "${CIRCLE_BRANCH}" in
              develop)
                aws s3 sync ./dist s3://xybersolve.io.2/ --delete
                ;;
              staging) 
                aws s3 sync ./dist s3://xybersolve.io.2/ --delete
                ;;
              master)
                aws s3 sync ./dist s3://xybersolve.io/ --delete
                ;;
            esac
            # command: aws s3 sync ./dist s3://xybersolve.io.2/ --delete
      #
      # note: use './deploy --open' to manually test development, staging interim s3 site 
      #      

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          context: xybersolve-io

      - deploy:
          requires:
            - build
          filters:
            branches:
              only: 
                - master
                - staging
                - develop
                - qa
          context: xybersolve-io    
